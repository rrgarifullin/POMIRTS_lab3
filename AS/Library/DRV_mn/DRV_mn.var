(********************************************************************
 * COPYRIGHT -- Bernecker + Rainer
 ********************************************************************
 * Library: DRV_mn
 * File: DRV_mn.var
 * Author: B+R
 ********************************************************************
 * Local variables of library DRV_mn
 ********************************************************************)
                                                                      
VAR CONSTANT
	mnERR_FLAG_PVAR_ADDR_LEN6	: UINT	:= 20336;		(*MNS_FLAG variable is shorter than the address and data length specified in the Write flag (packed) broadcast request*)
	mnERR_FLAG_PVAR_ADDR_LEN5	: UINT	:= 20335;		(*MNS_FLAG variable is shorter than the address and data length specified in the Write flag broadcast request*)
	mnERR_FLAG_PVAR_ADDR_LEN4	: UINT	:= 20334;		(*MNS_FLAG variable is shorter than the address and data length specified in the Read flag (packed) request*)
	mnERR_FLAG_PVAR_ADDR_LEN3	: UINT	:= 20333;		(*MNS_FLAG variable is shorter than the address and data length specified in the Write flag (packed) request*)
	mnERR_FLAG_PVAR_ADDR_LEN2	: UINT	:= 20332;		(*MNS_FLAG variable is shorter than the address and data length specified in the Read flag request*)
	mnERR_FLAG_PVAR_ADDR_LEN1	: UINT	:= 20331;		(*MNS_FLAG variable is shorter than the address and data length specified in the Write flag request*)
	mnERR_SLAVE_ADDR_LENGTH8	: UINT	:= 20393;		(*PV offset and PV length that exceed the address range for the "Read output" command*)
	mnERR_SLAVE_ADDR_LENGTH7	: UINT	:= 20392;		(*PV offset and PV length that exceed the address range for the "Write output" command*)
	mnERR_SLAVE_ADDR_LENGTH6	: UINT	:= 20391;		(*PV offset and PV length that exceed the address range for the "Read input" command*)
	mnERR_SLAVE_ADDR_LENGTH5	: UINT	:= 20390;		(*PV offset and PV length that exceed the address range for the "Write input" command*)
	mnERR_SLAVE_ADDR_LENGTH4	: UINT	:= 20389;		(*PV offset and PV length that exceed the address range for the "Read flag" command*)
	mnERR_SLAVE_ADDR_LENGTH3	: UINT	:= 20388;		(*PV offset and PV length that exceed the address range for the "Write flag" command*)
	mnERR_SLAVE_ADDR_LENGTH2	: UINT	:= 20387;		(*PV offset and PV length that exceed the address range for the "Read counter" command*)
	mnERR_SLAVE_ADDR_LENGTH1	: UINT	:= 20386;		(*PV offset and PV length that exceed the address range for the "Write counter" command*)
	mnERR_REG_PVAR_ADDR_LEN3	: UINT	:= 20324;		(*MNS_REG variable is shorter than the address and data length specified in the "Write counter" broadcast request*)
	mnERR_REG_PVAR_ADDR_LEN2	: UINT	:= 20323;		(*MNS_REG variable is shorter than the address and data length specified in the "Read counter" request*)
	mnERR_REG_PVAR_ADDR_LEN1	: UINT	:= 20322;		(*MNS_REG variable is shorter than the address and data length specified in the "Write counter" request*)
	mnERR_OUT_PVAR_ADDR_LEN6	: UINT	:= 20360;		(*MNS_OUT variable is shorter than the address and data length specified in the "Write output (packed)" request*)
	mnERR_OUT_PVAR_ADDR_LEN5	: UINT	:= 20359;		(*MNS_OUT variable is shorter than the address and data length specified in the "Write output" broadcast request*)
	mnERR_OUT_PVAR_ADDR_LEN4	: UINT	:= 20358;		(*MNS_OUT variable is shorter than the address and data length specified in the "Read output (packed)" request*)
	mnERR_OUT_PVAR_ADDR_LEN3	: UINT	:= 20357;		(*MNS_OUT variable is shorter than the address and data length specified in the "Write output (packed)" request*)
	mnERR_OUT_PVAR_ADDR_LEN2	: UINT	:= 20356;		(*MNS_OUT variable is shorter than the address and data length specified in the "Read output" request*)
	mnERR_OUT_PVAR_ADDR_LEN1	: UINT	:= 20355;		(*MNS_OUT variable is shorter than the address and data length specified in the "Write output" request*)
	mnERR_IN_PVAR_ADDR_LEN6	: UINT	:= 20348;			(*MNS_IN variable is shorter than the address and data length specified in the "Write input (packed)" broadcast request*)
	mnERR_IN_PVAR_ADDR_LEN5	: UINT	:= 20347;			(*MNS_IN variable is shorter than the address and data length specified in the "Write input" broadcast request*)
	mnERR_IN_PVAR_ADDR_LEN4	: UINT	:= 20346;			(*MNS_IN variable is shorter than the address and data length specified in the "Read input" (packed) request*)
	mnERR_IN_PVAR_ADDR_LEN3	: UINT	:= 20345;			(*MNS_IN variable is shorter than the address and data length specified in the "Write input" (packed) request*)
	mnERR_IN_PVAR_ADDR_LEN2	: UINT	:= 20344;			(*MNS_IN variable is shorter than the address and data length specified in the "Read input" request*)
	mnERR_IN_PVAR_ADDR_LEN1	: UINT	:= 20343;			(*MNS_IN variable is shorter than the address and data length specified in the "Write input" request*)
	mnERR_INFO_OTHER_SLAVE	: UINT	:= 20312;			(*frame received is addressed to a different slave*)
	mnERR_CMD_ALREADY_EXEC	: UINT	:= 20361;			(*write command in the MININET request has already been executed*)
	mnERR_INFO_SLAVE_RESP	: UINT	:= 20313;			(*frame received is a slave response for the master*)
	mnERR_CMD_INDEX_CONTR	: UINT	:= 20362;			(*conflict between command and index*)
	mnERR_BRDC_READ_CMD7	: UINT	:= 20371;			(*broadcast frame cannot contain the "Read output (packed)" command*)
	mnERR_BRDC_READ_CMD6	: UINT	:= 20370;			(*broadcast frame cannot contain the "Read input (packed)" command*)
	mnERR_BRDC_READ_CMD5	: UINT	:= 20369;			(*broadcast frame cannot contain the "Read flag (packed)" command*)
	mnERR_BRDC_READ_CMD4	: UINT	:= 20368;			(*broadcast frame cannot contain the "Read output" command*)
	mnERR_BRDC_READ_CMD3	: UINT	:= 20367;			(*broadcast frame cannot contain the "Read input" command*)
	mnERR_BRDC_READ_CMD2	: UINT	:= 20366;			(*broadcast frame cannot contain the "Read flag" command*)
	mnERR_BRDC_READ_CMD1	: UINT	:= 20365;			(*broadcast frame cannot contain the "Read counter" command*)
	mnERR_WARNING_NO_PV	: UINT	:= 20423;				(*no valid entries found in the Command Data Table*)
	mnERR_NO_FLAG_PVAR6	: UINT	:= 20330;				(*"Write flag (packed)" broadcast request cannot be executed*)
	mnERR_NO_FLAG_PVAR5	: UINT	:= 20329;				(*"Write flag" broadcast request cannot be executed*)
	mnERR_NO_FLAG_PVAR4	: UINT	:= 20328;				(*"Read flag (packed)" request cannot be executed*)
	mnERR_NO_FLAG_PVAR3	: UINT	:= 20327;				(*"Write flag (packed)" request cannot be executed*)
	mnERR_NO_FLAG_PVAR2	: UINT	:= 20326;				(*"Read flag" request cannot be executed*)
	mnERR_NO_FLAG_PVAR1	: UINT	:= 20325;				(*"Write flag" request cannot be executed*)
	mnERR_L2_INV_FRAME2	: UINT	:= 20304;				(*frame from slave contains no slave response code*)
	mnERR_L2_INV_FRAME1	: UINT	:= 20303;				(*node number in the response frame from the slave is not addressed to the master*)
	mnERR_L2_FRAME_LEN2	: UINT	:= 20309;				(*data length within the frame is less than 5 characters*)
	mnERR_L2_FRAME_LEN1	: UINT	:= 20311;				(*additional data received after the checksum for the MININET frame*)	
	mnERR_INV_CMD_PARA4	: UINT	:= 20317;				(*address length of the "packed writing/reading" broadcast request must be 2 bytes*)
	mnERR_INV_CMD_PARA3	: UINT	:= 20316;				(*address length of the "packed writing/reading" request must be 2 bytes*)
	mnERR_INV_CMD_PARA2	: UINT	:= 20315;				(*there is no 'R' after the reset slave command in a normal frame*)
	mnERR_INV_CMD_PARA1	: UINT	:= 20314;				(*there is no 'R' after the reset slave command in a broadcast frame*)
	mnERR_STX_IN_FRAME	: UINT	:= 20308;				(*valid STX (start of text) received within a data frame*)
	mnERR_PV_LEN_DATM4	: UINT	:= 20415;				(*there is no 'R' after the reset slave command in a normal frame*)
	mnERR_PV_LEN_DATM3	: UINT	:= 20414;				(*there is no 'R' after the reset slave command in a broadcast frame*)
	mnERR_PV_LEN_DATM2	: UINT	:= 20413;				(*frame received is a slave response for the master*)
	mnERR_PV_LEN_DATM1	: UINT	:= 20412;				(*frame received is addressed to a different slave*)
	mnERR_NO_REG_PVAR3	: UINT	:= 20321;				(*"Write counter" request in the incoming broadcast frame cannot be executed*)
	mnERR_NO_REG_PVAR2	: UINT	:= 20320;				(*"Read counter" request cannot be executed*)
	mnERR_NO_REG_PVAR1	: UINT	:= 20319;				(*"Write counter" request cannot be executed*)
	mnERR_NO_OUT_PVAR6	: UINT	:= 20354;				(*"Write output (packed)" broadcast request cannot be executed*)
	mnERR_NO_OUT_PVAR5	: UINT	:= 20353;				(*"Write output" broadcast request cannot be executed*)
	mnERR_NO_OUT_PVAR4	: UINT	:= 20352;				(*"Read output (packed)" request cannot be executed*)
	mnERR_NO_OUT_PVAR3	: UINT	:= 20351;				(*"Write output (packed)" request cannot be executed*)
	mnERR_NO_OUT_PVAR2	: UINT	:= 20350;				(*"Read output" request cannot be executed*)
	mnERR_NO_OUT_PVAR1	: UINT	:= 20349;				(*"Write output" request cannot be executed*)
	mnERR_L2_RX_TIMOUT	: UINT	:= 20305;				(*response frame has not arrived within timeout time*)
	mnERR_L2_INDEX_INV	: UINT	:= 20307;				(*invalid index received, bit 6 not set (0x40)*)
	mnERR_INVALID_CMD8	: UINT	:= 20401;				(*fatal error, new command in Command Data Table is unknown*)
	mnERR_INVALID_CMD7	: UINT	:= 20400;				(*invalid command in Command Data Table*)
	mnERR_INVALID_CMD6	: UINT	:= 20399;				(*"Read output (packed)" is not supported by the DRV_mn library*)
	mnERR_INVALID_CMD5	: UINT	:= 20398;				(*"Write output (packed)" is not supported by the DRV_mn library*)
	mnERR_INVALID_CMD4	: UINT	:= 20397;				(*"Read input (packed)" is not supported by the DRV_mn library*)
	mnERR_INVALID_CMD3	: UINT	:= 20396;				(*"Write input (packed)" is not supported by the DRV_mn library*)
	mnERR_INVALID_CMD2	: UINT	:= 20395;				(*"Read flag (packed)" is not supported by the DRV_mn library*)
	mnERR_INVALID_CMD1	: UINT	:= 20394;				(*"Write flag (packed)" is not supported by the DRV_mn library*)
	mnERR_RESET_INDEX	: UINT	:= 20404;				
	mnERR_NO_IN_PVAR6	: UINT	:= 20342;				(*"Write input (packed)" broadcast request cannot be executed*)
	mnERR_NO_IN_PVAR5	: UINT	:= 20341;				(*"Write input" broadcast request cannot be executed*)
	mnERR_NO_IN_PVAR4	: UINT	:= 20340;				(*"Read input (packed)" request cannot be executed*)
	mnERR_NO_IN_PVAR3	: UINT	:= 20339;				(*"Write input (packed)" request cannot be executed*)
	mnERR_NO_IN_PVAR2	: UINT	:= 20338;				(*"Read input" request cannot be executed*)
	mnERR_NO_IN_PVAR1	: UINT	:= 20337;				(*"Write input" request cannot be executed*)
	mnERR_INX_INVALID	: UINT	:= 20318;				(*invalid index received*)
	mnERR_INV_WR_RESP	: UINT	:= 20406;				(*invalid length of a response to a write command*)
	mnERR_INV_RD_RESP	: UINT	:= 20407;				(*invalid length of a response to a read command*)
	mnERR_ILLG_IDENT3	: UINT	:= 20410;				(*invalid ident value when MNMopen() or MNSopen() is called again*)
	mnERR_ILLG_IDENT2	: UINT	:= 20409;				(*invalid value at ident input in the MNMclose() or MNSclose() FBKs*)
	mnERR_ILLG_IDENT1	: UINT	:= 20408;				(*invalid value at ident input in the MNMclien() or MNSservr() FBKs*)
	mnERR_CMD_LENGTH8	: UINT	:= 20385;				(*PV length that is not permissible in MININET frames was specified for the "Read output" command*)
	mnERR_CMD_LENGTH7	: UINT	:= 20384;				(*PV length that is not permissible in MININET frames was specified for the "Write output" command*)
	mnERR_CMD_LENGTH6	: UINT	:= 20383;				(*PV length that is not permissible in MININET frames was specified for the "Read input" command*)
	mnERR_CMD_LENGTH5	: UINT	:= 20382;				(*PV length that is not permissible in MININET frames was specified for the "Write input" command*)
	mnERR_CMD_LENGTH4	: UINT	:= 20381;				(*PV length that is not permissible in MININET frames was specified for the "Read flag" command*)
	mnERR_CMD_LENGTH3	: UINT	:= 20380;				(*PV length that is not permissible in MININET frames was specified for the "Write flag" command*)
	mnERR_CMD_LENGTH2	: UINT	:= 20379;				(*PV length that is not permissible in MININET frames was specified for the "Read counter" command*)
	mnERR_CMD_LENGTH1	: UINT	:= 20378;				(*PV length that is not permissible in MININET frames was specified for the "Write counter" command*)
	mnERR_PV_LENGTH3	: UINT	:= 20374;				(*PV length in Command Data Table is longer than the PV name data type*)
	mnERR_PV_LENGTH2	: UINT	:= 20373;				(*PV length in Command Data Table is longer than the PV name data type*)
	mnERR_PV_LENGTH1	: UINT	:= 20372;				(*invalid data type for enable flag variable (BOOL or USINT)*)
	mnERR_L2_RX_CHAR	: UINT	:= 20306;				(*error while receiving a character (overflow, stop bit, parity error, etc.)*)
	mnERR_INV_INDEX2	: UINT	:= 20403;				(*invalid index in slave response*)
	mnERR_INV_INDEX1	: UINT	:= 20402;				(*invalid index or invalid frame length in slave response to reset slave command*)
	mnERR_ENFLAG_LEN	: UINT	:= 20422;				(*invalid data type for enable flag PV (BOOL or USINT)*)
	mnERR_NO_ENTRY2	: UINT	:= 20417;					(*Command Data Table contains no entries*)
	mnERR_NO_ENTRY1	: UINT	:= 20416;					(*Command Data Table contains no entries*)
	mnERR_INIT_NODE	: UINT	:= 20428;					(*invalid node number*)
	mnERR_ILLG_VARS	: UINT	:= 20411;					(*no Command Data Table attached to the vars input*)
	mnERR_FRAME_BCC	: UINT	:= 20310;					(*frame received with an invalid block checksum*)
	mnERR_DATENTRY7	: UINT	:= 20426;					(*fatal error: string length for PV name is no longer valid*)	
	mnERR_DATENTRY6	: UINT	:= 20425;					(*fatal error: string length for PV name is no longer valid*)
	mnERR_DATENTRY5	: UINT	:= 20424;					(*fatal error: string length for enable flag is no longer valid*)
	mnERR_DATENTRY4	: UINT	:= 20421;					(*length of an entry (command) does not match the length of the first entry in the Command Data Table*)
	mnERR_DATENTRY3	: UINT	:= 20420;					(*length of a PV name string does not match the string length of PV name in the first entry of the Command Data Table*)
	mnERR_DATENTRY2	: UINT	:= 20419;					(*length of name for enable flag does not match the length of the name in the first entry of the Command Data Table*)
	mnERR_DATENTRY1	: UINT	:= 20418;					(*length of null string does not match the length of the name in the first entry of the Command Data Table*)
	mnERR_PV_NAME2	: UINT	:= 20376;					(*PV name string in the Command Data Table consists only of spaces*)
	mnERR_PV_NAME1	: UINT	:= 20375;					(*PV name string in the Command Data Table consists only of spaces*)
	mnERR_NO_PVAR5	: UINT	:= 20429;					(*no MININET slave variables found (MNS_xxx variables)*)
	mnERR_INV_CMD2	: UINT	:= 20364;					(*unknown command in incoming broadcast frame*)
	mnERR_INV_CMD1	: UINT	:= 20363;					(*unknown command in incoming frame*)
	mnERR_SYSMEM2	: UINT	:= 20302;					(*internal value of a step switching mechanism is outside the valid range*)
	mnERR_SYSMEM1	: UINT	:= 20301;					(*internal value of a step switching mechanism is outside the valid range*)
	mnERR_NO_LIST	: UINT	:= 20427;					(*valid Command Data Table has not been initialized in the MNMopen() function*)
	mnERR_NODE_ID	: UINT	:= 20377;					(*Node number in the Command Data Table is greater than 0x7F*)
	mnERR_MININET	: UINT	:= 20300;					
	mnERR_INDEX	: UINT	:= 20405;						
END_VAR