(********************************************************************
 * COPYRIGHT (C) BERNECKER + RAINER, AUSTRIA, A-5142 EGGELSBERG
 ********************************************************************
 * Library: CAN_Lib
 * File: CAN_Lib.var
 * Created: 22.02.2010
 ********************************************************************
 * Constants of library CAN_Lib
 ********************************************************************)
VAR CONSTANT
	canERR_CAN_NOENTRY		: UINT	:= 8800;		(*not enough communication objects (COBs) available as specified in CANopen*)
	canERR_CAN_NOMEM		: UINT	:= 8801;		(*not enough memory available for resources*)
	canERR_CAN_WRIDENT		: UINT	:= 8802;		(*wrong identifier*)
	canERR_CAN_COBUSED		: UINT	:= 8803;		(*communication objects (COBs) identifier is already being used in the system*)
	canERR_CAN_WRCANID		: UINT	:= 8804;		(*wrong CAN identifier: Only standard CAN identifiers (11 bits) up to 2047 are permitted*)
	canERR_CAN_WRUSERID		: UINT	:= 8805;		(*incorrect user ID us_ident transferred, or the FBK cannot be used after a CANMulOpen*)
	canERR_CAN_COBDEF		: UINT	:= 8806;		(*a COB with the specified CAN identifier has already been defined in the system*)
	canERR_CAN_WRDEF		: UINT	:= 8807;		(*false CAN identifier definition*)
	canERR_CAN_WRHDLE		: UINT	:= 8808;		(*COB management (FBK memory) destroyed*)
	canERR_CAN_BUSY			: UINT	:= 8809;		(*CAN operation with the same CAN identifier is busy*)
	canERR_CAN_QFULL		: UINT	:= 8810;		(*transmit queue full*)
	canERR_CAN_BUSOFF		: UINT	:= 8811;		(*CAN bus is BusOff. Different baud rate on different nodes?*)
	canERR_CAN_NOHIGH		: UINT	:= 8812;		(*no more buffers available: All buffers (max. 13) in the can controller have already been defined and assigned*)
	canERR_CAN_NOTINST		: UINT	:= 8813;		(*CAN driver not installed: CAN2000.BR not loaded (needs to be transferred to target system)*)
	canERR_CAN_WRLNG		: UINT	:= 8814;		(*data type of event PV is not BYTES or the length of a write PV is greater than 8 bytes: CAN FBKs can only send data of length 8 bytes to the CAN bus*)
	canERR_CAN_BDRATE		: UINT	:= 8815;		(*illegal baud rate *)
	canERR_CAN_COBANZ		: UINT	:= 8816;		(*cob_anz in CANopen/CANMulOpen incorrect: cob_no must be less than 2048 and greater than 0*)
	canERR_CAN_NOCONTR		: UINT	:= 8817;		(*no CAN controller found: Error in the device string of the FBK CANopen / CANMulOpen or the CAN controller is not ready - hardware may not be present*)
	canERR_CAN_HTLXINF		: UINT	:= 8818;		(*error analyzing hardware*)
	canERR_CAN_HTLQUIT		: UINT	:= 8819;		(*error in interrupt handling*)
	canERR_CAN_NOFUNC		: UINT	:= 8820;		(*error in interrupt handling*)
	canERR_CAN_WRUSRTYP		: UINT	:= 8821;		(*user_typ in CMSinit is incorrect: user_typ must be 0 for client or 1 for server*)
	canERR_WRCMSOBJ			: UINT	:= 8822;		(*CMS object incorrectly defined: Syntax error in the CMS data object for CMSinit() (see cms_entry)*)
	canERR_CAN_WRSTRUCT		: UINT	:= 8823;		(*invalid CMS structure: The structure is too complex (only simple structures are permitted)*)
	canERR_CAN_WRMODE		: UINT	:= 8824;		(*incorrect value for cms_mode transferred to the CMSmain() function (valid value: 2)*)
	canERR_CAN_NO_NODE		: UINT	:= 8825;		(*node number cannot be read*)
	canERR_CAN_NILPTR		: UINT	:= 8826;		(*an invalid parameter has been transferred (NULL)*)
	canERR_CAN_IRQHANDLE	: UINT	:= 8827;		(*internal management is destroyed in the interrupt handler*)
	canERR_CAN_ABORTED		: UINT	:= 8828;		(*abort protocol has been sent to the client (>add_code)*)
	canERR_CAN_ABORTRECEIV	: UINT	:= 8829;		(*abort protocol has been received from the client*)
	canERR_CAN_FBHANDLE		: UINT	:= 8830;		(*incorrect FBCAN handle*)
	canERR_CAN_EXTENDED		: UINT	:= 8831;		(*conflict with standard/extended mode (11 or 29-bit CAN identifier): FBK configuration and system configuration (Automation Studio) of CAN interface do not match*)
	canERR_CMS_MULTIPLEX	: UINT	:= 8832;		(*CMS multiplexer definition error: Different object_typ, access_typ or ID or a multiplexer has been used more than once for an ID*)
	canERR_CAN_WROBJ		: UINT	:= 8833;		(*CAN object error: Tried to use a dynamic PV. Use a normal PV*)
	canERR_CAN_BITMODE		: UINT	:= 8834;		(*CAN identifier mode configured differently (11-bit / 29-bit, see the Automation Studio CAN device configuration)*)
	canERR_FBCAN_COB		: UINT	:= 8837;		(*INA2000 CAN: COB not defined*)
	canERR_FBCAN_NODENR		: UINT	:= 8838;		(*INA2000 CAN: Node number too large*)
	canERR_FBCAN_HANDLE		: UINT	:= 8839;		(*INA2000 CAN: Incorrect handle*)
	canERR_FBCAN_RXBUF		: UINT	:= 8840;		(*INA2000 CAN: No Rx buffer free*)
	canERR_CAN_STUFF		: UINT	:= 8841;		(*Warning: CAN: Stuff error -> CAN ID collision / baud rate*)
	canERR_CAN_FORM			: UINT	:= 8842;		(*Warning: CAN: Format error -> Baud rate*)
	canERR_CAN_ACK			: UINT	:= 8843;		(*Warning: CAN: ACK error - No acknowledge from other nodes*)
	canERR_CAN_BIT1			: UINT	:= 8844;		(*Warning: CAN: Bit1 send error (recessive bit)*)
	canERR_CAN_BIT0			: UINT	:= 8845;		(*Warning: CAN: Bit0 send error (dominant bit)*)
	canERR_CAN_CRC			: UINT	:= 8846;		(*Warning: CAN: CRC checksum error*)
	canERR_WRONG_OBJNR		: UINT	:= 8850;		(*CAN CCI: Object number not within value range*)
	canERR_NO_INIT_STATE	: UINT	:= 8851;		(*CAN CCI: Error during initialization*)
	canERR_NO_BUSOFF_STATE	: UINT	:= 8852;		(*CAN CCI: BUS_OFF problem*)
	canERR_NO_BUFFER_CFG	: UINT	:= 8853;		(*CAN CCI: Buffer not configured*)
	canERR_HW_RESET_ACTIVE	: UINT	:= 8854;		(*CAN CCI: Hardware in reset state*)
	canERR_CPU_UPDATE		: UINT	:= 8855;		(*CAN CCI: Error updating data*)
	canERR_OBJ_ACTIVE		: UINT	:= 8856;		(*CAN CCI: Buffer being processed*)
	canERR_READ_ONLY_OBJ	: UINT	:= 8857;		(*CAN CCI: Read-only object*)
	canERR_WRONG_CAN_MODE	: UINT	:= 8858;		(*CAN CCI: Incorrect mode (Standard/Extended)*)
	canERR_WRONG_MSG_LEN	: UINT	:= 8859;		(*the specified length does not match the length of the CAN message*)
	canERR_TXIE_NOT_ALLOWED	: UINT	:= 8860;		(*CAN CCI: Transmit interrupt not allowed*)
	canERR_TXIE_ALLOWED		: UINT	:= 8861;		(*CAN CCI: Transmit interrupt has to be set*)
	canERR_RXIE_NOT_ALLOWED	: UINT	:= 8862;		(*CAN CCI: Receive interrupt not allowed*)
	canERR_RXIE_ALLOWED		: UINT	:= 8863;		(*CAN CCI: Receive interrupt has to be set*)
	canERR_WRONG_CAN_ID		: UINT	:= 8864;		(*CAN CCI: Incorrect CAN ID entered*)
	canERR_NO_RD_MODE		: UINT	:= 8865;		(*CAN CCI: Reading with send object*)
	canERR_NO_WR_MODE		: UINT	:= 8866;		(*CAN CCI: Writing with receive object*)
	canERR_NO_STATE_BOFF	: UINT	:= 8867;		(*CAN CCI: BUS_OFF state not accepted*)
	canERR_NO_STATE_INIT	: UINT	:= 8868;		(*CAN CCI: Init state not accepted*)
	canERR_NO_STATE_BON		: UINT	:= 8869;		(*CAN CCI: BUS_ON state not accepted*)
	canERR_NORMAL_NOT_POSIBLE:UINT	:= 8870;		(*CAN CCI: Interrupt number not allowed*)
	canERR_STATUS			: UINT	:= 8871;		(*CAN CCI: Error in status (structure)*)
	canERR_MSG_LOST			: UINT	:= 8872;		(*message lost: One or more data frames have been lost for this CAN identifier. The buffer has been overwritten but the data is consistent*)
	canERR_MAXRETRY_DATENINKONSIST : UINT	:= 8873;		(*CAN CCI: Read data inconsistent despite max. retries*)
	canERR_MAX_RETRY_CNT	: UINT	:= 8874;		(*CAN CCI: Retry counter expired*)
	canERR_DATEN_INKONSISTENT:UINT	:= 8875;		(*the data for this CAN identifier is inconsistent (new data received during CANread())*)
	canERR_NO_OBJ_FREE		: UINT	:= 8876;		(*send buffer is not free: This error occurs if a high-priority object has been defined without overwrite mode, for example, and the data from the last CMSmain() instruction is still in the CAN controller waiting to be sent*)
	canERR_NO_DATA			: UINT	:= 8877;		(*no current data available for the specified CAN identifier*)
END_VAR